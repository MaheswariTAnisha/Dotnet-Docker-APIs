apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-api-dep
  labels:
    app: my-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-api
  template:
    metadata:
      labels:
        app: my-api
    spec:
      containers:
        - name: my-api
          image: us-central1-docker.pkg.dev/civic-nation-450611-j2/mydotnetrepo/myapiproject:latest
          ports:
            - containerPort: 80  # ✅ Keep it at 80 for proper routing
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-second-api-dep
  labels:
    app: my-second-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-second-api
  template:
    metadata:
      labels:
        app: my-second-api
    spec:
      containers:
        - name: my-second-api
          image: us-central1-docker.pkg.dev/civic-nation-450611-j2/mydotnetrepo/mysecondapiproject:latest
          ports:
            - containerPort: 80  # ✅ Change from 81 to 80 for Ingress compatibility
---
apiVersion: v1
kind: Service
metadata:
  name: my-api-service
  labels:
    app: my-api
spec:
  type: NodePort  # ✅ Change LoadBalancer to ClusterIP (Ingress will handle external access)
  selector:
    app: my-api
  ports:
    - port: 80
      targetPort: 80 
---
apiVersion: v1
kind: Service
metadata:
  name: my-second-api-service
  labels:
    app: my-second-api
spec:
  type: NodePort  # ✅ Change LoadBalancer to ClusterIP (Ingress will handle external access)
  selector:
    app: my-second-api
  ports:
    - port: 80  # ✅ Expose both services on port 80 for Ingress
      targetPort: 80 
      
